{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","tableData","setTableData","useState","useEffect","today","Date","month","String","getMonth","padStart","date","getDate","fetch","then","response","json","data","catch","error","console","React","createElement","className","header1","header2","header3","rows","map","row","rowIndex","key","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8LAiDeA,MA9Cf,WACI,MAAOC,EAAWC,GAAgBC,mBAAS,MAe3C,OAbAC,oBAAU,KACN,MAAMC,EAAQ,IAAIC,KACZC,EAAQC,OAAOH,EAAMI,WAAa,GAAGC,SAAS,EAAG,KACjDC,EAAOH,OAAOH,EAAMO,WAAWF,SAAS,EAAG,KAIjDG,MAAM,oBAAyBN,KAHXI,EAAH,WAIZG,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,GAAQf,EAAae,IAC1BC,MAAMC,GAASC,QAAQD,MAAM,uBAAwBA,KAC3D,IAEElB,EAKDoB,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,QAAMC,UAAU,YACZF,IAAAC,cAAA,SAAOC,UAAU,aACbF,IAAAC,cAAA,aACAD,IAAAC,cAAA,UACID,IAAAC,cAAA,UAAKrB,EAAUuB,SACfH,IAAAC,cAAA,UAAKrB,EAAUwB,SACdxB,EAAUyB,SAAWL,IAAAC,cAAA,UAAKrB,EAAUyB,WAGzCL,IAAAC,cAAA,aACCrB,EAAU0B,KAAKC,IAAI,CAACC,EAAKC,IACtBT,IAAAC,cAAA,MAAIS,IAAKD,GACLT,IAAAC,cAAA,UAAKO,EAAI,IACTR,IAAAC,cAAA,UAAKO,EAAI,IACRA,EAAI,IAAMR,IAAAC,cAAA,UAAKO,EAAI,UAnBjCR,IAAAC,cAAA,WAAK,eCRLU,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,KAAKqB,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxB,IAAAC,cAACD,IAAMyB,WAAU,KACfzB,IAAAC,cAACtB,EAAG,QAORgC,K","file":"static/js/main.55d19bc1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n    const [tableData, setTableData] = useState(null);\n\n    useEffect(() => {\n        const today = new Date();\n        const month = String(today.getMonth() + 1).padStart(2, '0');\n        const date = String(today.getDate()).padStart(2, '0');\n        const fileName = `${date}.json`;\n        const baseUrl = process.env.PUBLIC_URL;\n\n        fetch(`${baseUrl}/prayertime/${month}/${fileName}`)\n            .then(response => response.json())\n            .then(data => setTableData(data))\n            .catch(error => console.error('Error fetching data:', error));\n    }, []);\n\n    if (!tableData) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"App\">\n            <main className=\"App-main\">\n                <table className=\"App-table\">\n                    <thead>\n                    <tr>\n                        <th>{tableData.header1}</th>\n                        <th>{tableData.header2}</th>\n                        {tableData.header3 && <th>{tableData.header3}</th>}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {tableData.rows.map((row, rowIndex) => (\n                        <tr key={rowIndex}>\n                            <td>{row[0]}</td>\n                            <td>{row[1]}</td>\n                            {row[2] && <td>{row[2]}</td>}\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </main>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}